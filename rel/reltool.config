%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ft=erlang ts=4 sw=4 et

{sys, [
       {lib_dirs, ["..", "../deps"]},
       {erts, [{mod_cond, derived}, {app_file, strip}]},
       {app_file, strip},
       {rel, "coffer", "0.1",
        [
         kernel,
         stdlib,
         sasl,
         crypto,
         ranch,
         cowboy,
         lager,
         jiffy,
         coffer
        ]},
       {rel, "start_clean", "",
        [
         kernel,
         stdlib
        ]},
       {boot_rel, "coffer"},
       {profile, embedded},
       {excl_archive_filters, [".*"]}, %% Do not archive built libs
       {excl_sys_filters, ["^bin/.*", "^erts.*/bin/(dialyzer|typer)",
                           "^erts.*/(doc|info|include|lib|man|src)"]},
       {excl_app_filters, ["\.gitignore"]},

       {app, lager, [{incl_cond, include}]},
       {app, ranch, [{incl_cond, include}]},
       {app, cowboy, [{incl_cond, include}]},
       {app, jiffy, [{incl_cond, include}]},
       {app, coffer, [{incl_cond, include}]}
      ]}.

{target_dir, "coffer"}.

{overlay, [
           {mkdir, "log/sasl"},
           {template, "files/app.config", "etc/app.config"},
           {template, "files/vm.args", "etc/vm.args"},
           {copy, "files/erl", "\{\{erts_vsn\}\}/bin/erl"},
           {copy, "files/nodetool", "\{\{erts_vsn\}\}/bin/nodetool"},
           {copy, "files/coffer", "bin/coffer"},
           {copy, "files/coffer.cmd", "bin/coffer.cmd"},
           {copy, "files/start_erl.cmd", "bin/start_erl.cmd"},
           {copy, "files/install_upgrade.escript", "bin/install_upgrade.escript"}
          ]}.
